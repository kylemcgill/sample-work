import pandas as pd

def numericalDistribution(true_df, false_df, current_df, col_name, arguments):
    '''
    Prints out the distibution of numerical data for the set of true's
    false's and all data points.

    true_df = the set of machines with HasDetections == 1

    false_df = the set of machines with HasDetections == 0

    current_df = all machines in the data set

    col_name = the name of the x-column for quick access
    
    arguments = the options passed into the program
    '''
    print('-'*60)
    print(f'True_df description:')
    print(true_df.describe())
    print('-'*15)
    print(f'false_df description:')
    print(false_df.describe())
    print('-'*15)
    print(f'current_df description:')
    print(current_df.describe())


def numericalMultipleMode(true_df, false_df, current_df, col_name, arguments):
    '''
    Prints out the distibution of numerical data after binning for the set of true's
    false's and all data points. Returns the number of detected modes.

    true_df = the set of machines with HasDetections == 1

    false_df = the set of machines with HasDetections == 0

    current_df = all machines in the data set

    col_name = the name of the x-column for quick access
    
    arguments = the options passed into the program

    RETURNS the number of detected modes
    '''

    return 0

def tTest(true_df, false_df, current_df, col_name, arguments):
    '''
    Performs a t-test between the true and false dfs to determine 
    how similar the distributions are. The null hypothesis is both
    true and false should have the same distribution.

    true_df = the set of machines with HasDetections == 1

    false_df = the set of machines with HasDetections == 0

    current_df = all machines in the data set

    col_name = the name of the x-column for quick access
    
    arguments = the options passed into the program
    '''
    pass
